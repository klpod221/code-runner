services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: code_runner_api
    ports:
      - "3000:3000"
    volumes:
      - ./api:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
      executor:
        condition: service_started
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - CODE_RUNNER_URL=${CODE_RUNNER_URL}
    command: npm run dev
    restart: always

  executor:
    build:
      context: ./executor
      dockerfile: Dockerfile
      args:
        - NODEJS_VERSION=${NODEJS_VERSION}
        - PYTHON_VERSION=${PYTHON_VERSION}
        - JAVA_VERSION=${JAVA_VERSION}
        - CPP_VERSION=${CPP_VERSION}
        - C_VERSION=${C_VERSION}
    container_name: code_runner_executor
    volumes:
      - ./executor:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV}
      - MAX_EXECUTION_TIME=${MAX_EXECUTION_TIME}
      - MAX_MEMORY=${MAX_MEMORY}
    restart: always

  db:
    image: postgres:14
    container_name: code_runner_db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./docker/postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  code_execution_tmp:
    driver: local
